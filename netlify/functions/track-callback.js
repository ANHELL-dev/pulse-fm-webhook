const admin = require('firebase-admin');

// –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
function initializeFirebase() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ Firebase
    if (admin.apps.length > 0) {
        console.log('‚úÖ Firebase —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return true;
    }
    
    try {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...');
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        const privateKey = process.env.FIREBASE_PRIVATE_KEY;
        const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;
        const projectId = "pulse-fm-84a48";
        
        console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö:');
        console.log('- Project ID:', projectId);
        console.log('- Client Email:', clientEmail);
        console.log('- Private Key –¥–ª–∏–Ω–∞:', privateKey ? privateKey.length : 0);
        console.log('- Private Key –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å:', privateKey ? privateKey.substring(0, 30) : 'null');
        
        if (!privateKey || !clientEmail) {
            throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
        }
        
        // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
        let cleanPrivateKey = privateKey;
        
        // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ –∏–∑ environment variable, –æ—á–∏—â–∞–µ–º –µ—ë
        if (typeof cleanPrivateKey === 'string') {
            // –ó–∞–º–µ–Ω—è–µ–º \\n –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
            cleanPrivateKey = cleanPrivateKey.replace(/\\n/g, '\n');
            
            // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∫–∞–≤—ã—á–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
            cleanPrivateKey = cleanPrivateKey.replace(/^"/, '').replace(/"$/, '');
        }
        
        console.log('üîë –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–ª—é—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å:', cleanPrivateKey.substring(0, 30));
        console.log('üîë –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–ª—é—á –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞:', cleanPrivateKey.substring(cleanPrivateKey.length - 30));
        
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
        const serviceAccount = {
            type: "service_account",
            project_id: projectId,
            private_key_id: "dummy", // –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã
            private_key: cleanPrivateKey,
            client_email: clientEmail,
            client_id: "dummy", // –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã
            auth_uri: "https://accounts.google.com/o/oauth2/auth",
            token_uri: "https://oauth2.googleapis.com/token",
            auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
        };
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase Admin
        admin.initializeApp({
            credential: admin.credential.cert(serviceAccount),
            projectId: projectId
        });
        
        console.log('‚úÖ Firebase —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return true;
        
    } catch (error) {
        console.error('‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ Firebase:', error);
        console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore
async function testFirestoreConnection() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore...');
        
        const db = admin.firestore();
        
        // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        const testCollection = await db.collection('test').limit(1).get();
        console.log('‚úÖ Firestore –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
        
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore:', error);
        return false;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
module.exports = {
    initializeFirebase,
    testFirestoreConnection
};
